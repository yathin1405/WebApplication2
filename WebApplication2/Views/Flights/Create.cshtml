@model WebApplication2.Models.Flight

@{
    ViewBag.Title = "Create";
}

<h2 class="text-center text-info">Book A Flight</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    @Html.HiddenFor(x => x.CustomerName)
    @Html.HiddenFor(x => x.CustomerSurname)
    @Html.HiddenFor(x => x.Address)
    @Html.HiddenFor(x => x.BoardDateAndTime)
    @Html.HiddenFor(x => x.DateBooked)
    @Html.HiddenFor(x => x.TotalCost)
    @Html.HiddenFor(x => x.TicketNumber)

    <p><a class="btn btn-default" href="https://localhost:44305/Flights1/Create">One way </a></p>
    <div>

        <div class="form-horizontal">




            @*<div class="form-group">

                    @Html.Label("One Way", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="radio">
                                @Html.RadioButton(model => model.returnTicket == true)
                                @Html.ValidationMessageFor(model => model.returnTicket, "", new { @class = "text-danger" })
                            </div>
                        </div>
                </div>*@


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.Label("Airline:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.FlightL, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FlightL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("From:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.FromL, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FromL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Destination:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.DestinationL, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DestinationL, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.Label("Class:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.ClassL, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ClassL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Departure Date:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateFlight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateFlight, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DepartureTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.DepartureTime, new SelectListItem[]
                  {
                  new SelectListItem() { Text="06:00", Value="6:00:00"},
                  new SelectListItem() { Text="08:00", Value="8:00:00"},
                  new SelectListItem() { Text="10:00", Value="10:00:00"},
                  new SelectListItem() { Text="12:00", Value="12:00:00"},
                  }, "Select Time")

                </div>
            </div>

            <div class="form-group">
                @Html.Label("Return Date:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateReturn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateReturn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Return_Time, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Return_Time, new SelectListItem[]
                  {
                  new SelectListItem() { Text="06:00", Value="6:00:00"},
                  new SelectListItem() { Text="08:00", Value="8:00:00"},
                  new SelectListItem() { Text="10:00", Value="10:00:00"},
                  new SelectListItem() { Text="12:00", Value="12:00:00"},
                  }, "Select Time")

                </div>
            </div>
            <div class="form-group">
                @Html.Label("Number of Adults:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumA, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumA, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Number of Children:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumC, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumA, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Number of Infants:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumI, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumA, "", new { @class = "text-danger" })
                </div>
            </div>
            @*<div class="form-group">
                @Html.Label("Reference", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RefID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RefID, "", new { @class = "text-danger" })
                </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
